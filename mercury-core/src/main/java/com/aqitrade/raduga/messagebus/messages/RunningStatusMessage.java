/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.aqitrade.raduga.messagebus.messages;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RunningStatusMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RunningStatusMessage\",\"namespace\":\"com.aqitrade.raduga.messagebus.messages\",\"fields\":[{\"name\":\"accountAuthID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"role\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"queueSize\",\"type\":\"long\"},{\"name\":\"despMsg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public String accountAuthID;
  @Deprecated public String role;
  @Deprecated public long queueSize;
  @Deprecated public String despMsg;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public RunningStatusMessage() {}

  /**
   * All-args constructor.
   */
  public RunningStatusMessage(String accountAuthID, String role, Long queueSize, String despMsg) {
    this.accountAuthID = accountAuthID;
    this.role = role;
    this.queueSize = queueSize;
    this.despMsg = despMsg;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return accountAuthID;
    case 1: return role;
    case 2: return queueSize;
    case 3: return despMsg;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: accountAuthID = (String)value$; break;
    case 1: role = (String)value$; break;
    case 2: queueSize = (Long)value$; break;
    case 3: despMsg = (String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'accountAuthID' field.
   */
  public String getAccountAuthID() {
    return accountAuthID;
  }

  /**
   * Sets the value of the 'accountAuthID' field.
   * @param value the value to set.
   */
  public void setAccountAuthID(String value) {
    this.accountAuthID = value;
  }

  /**
   * Gets the value of the 'role' field.
   */
  public String getRole() {
    return role;
  }

  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(String value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'queueSize' field.
   */
  public Long getQueueSize() {
    return queueSize;
  }

  /**
   * Sets the value of the 'queueSize' field.
   * @param value the value to set.
   */
  public void setQueueSize(Long value) {
    this.queueSize = value;
  }

  /**
   * Gets the value of the 'despMsg' field.
   */
  public String getDespMsg() {
    return despMsg;
  }

  /**
   * Sets the value of the 'despMsg' field.
   * @param value the value to set.
   */
  public void setDespMsg(String value) {
    this.despMsg = value;
  }

  /** Creates a new RunningStatusMessage RecordBuilder */
  public static Builder newBuilder() {
    return new Builder();
  }
  
  /** Creates a new RunningStatusMessage RecordBuilder by copying an existing Builder */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }
  
  /** Creates a new RunningStatusMessage RecordBuilder by copying an existing RunningStatusMessage instance */
  public static Builder newBuilder(RunningStatusMessage other) {
    return new Builder(other);
  }
  
  /**
   * RecordBuilder for RunningStatusMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RunningStatusMessage>
    implements org.apache.avro.data.RecordBuilder<RunningStatusMessage> {

    private String accountAuthID;
    private String role;
    private long queueSize;
    private String despMsg;

    /** Creates a new Builder */
    private Builder() {
      super(RunningStatusMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.accountAuthID)) {
        this.accountAuthID = data().deepCopy(fields()[0].schema(), other.accountAuthID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.role)) {
        this.role = data().deepCopy(fields()[1].schema(), other.role);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.queueSize)) {
        this.queueSize = data().deepCopy(fields()[2].schema(), other.queueSize);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.despMsg)) {
        this.despMsg = data().deepCopy(fields()[3].schema(), other.despMsg);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RunningStatusMessage instance */
    private Builder(RunningStatusMessage other) {
            super(RunningStatusMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.accountAuthID)) {
        this.accountAuthID = data().deepCopy(fields()[0].schema(), other.accountAuthID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.role)) {
        this.role = data().deepCopy(fields()[1].schema(), other.role);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.queueSize)) {
        this.queueSize = data().deepCopy(fields()[2].schema(), other.queueSize);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.despMsg)) {
        this.despMsg = data().deepCopy(fields()[3].schema(), other.despMsg);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'accountAuthID' field */
    public String getAccountAuthID() {
      return accountAuthID;
    }
    
    /** Sets the value of the 'accountAuthID' field */
    public Builder setAccountAuthID(String value) {
      validate(fields()[0], value);
      this.accountAuthID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'accountAuthID' field has been set */
    public boolean hasAccountAuthID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'accountAuthID' field */
    public Builder clearAccountAuthID() {
      accountAuthID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'role' field */
    public String getRole() {
      return role;
    }
    
    /** Sets the value of the 'role' field */
    public Builder setRole(String value) {
      validate(fields()[1], value);
      this.role = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'role' field has been set */
    public boolean hasRole() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'role' field */
    public Builder clearRole() {
      role = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'queueSize' field */
    public Long getQueueSize() {
      return queueSize;
    }
    
    /** Sets the value of the 'queueSize' field */
    public Builder setQueueSize(long value) {
      validate(fields()[2], value);
      this.queueSize = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'queueSize' field has been set */
    public boolean hasQueueSize() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'queueSize' field */
    public Builder clearQueueSize() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'despMsg' field */
    public String getDespMsg() {
      return despMsg;
    }
    
    /** Sets the value of the 'despMsg' field */
    public Builder setDespMsg(String value) {
      validate(fields()[3], value);
      this.despMsg = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'despMsg' field has been set */
    public boolean hasDespMsg() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'despMsg' field */
    public Builder clearDespMsg() {
      despMsg = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public RunningStatusMessage build() {
      try {
        RunningStatusMessage record = new RunningStatusMessage();
        record.accountAuthID = fieldSetFlags()[0] ? this.accountAuthID : (String) defaultValue(fields()[0]);
        record.role = fieldSetFlags()[1] ? this.role : (String) defaultValue(fields()[1]);
        record.queueSize = fieldSetFlags()[2] ? this.queueSize : (Long) defaultValue(fields()[2]);
        record.despMsg = fieldSetFlags()[3] ? this.despMsg : (String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
