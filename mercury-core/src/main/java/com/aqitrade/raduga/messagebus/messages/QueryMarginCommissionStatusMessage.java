/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.aqitrade.raduga.messagebus.messages;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class QueryMarginCommissionStatusMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"QueryMarginCommissionStatusMessage\",\"namespace\":\"com.aqitrade.raduga.messagebus.messages\",\"fields\":[{\"name\":\"brokerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"accountID\",\"type\":\"long\"},{\"name\":\"accountAuthId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"symbol\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"longMarginRatioByMoney\",\"type\":\"double\"},{\"name\":\"longMarginRatioByVolume\",\"type\":\"double\"},{\"name\":\"shortMarginRatioByMoney\",\"type\":\"double\"},{\"name\":\"shortMarginRatioByVolume\",\"type\":\"double\"},{\"name\":\"openRatioByMoney\",\"type\":\"double\"},{\"name\":\"openRatioByVolume\",\"type\":\"double\"},{\"name\":\"closeRatioByMoney\",\"type\":\"double\"},{\"name\":\"closeRatioByVolume\",\"type\":\"double\"},{\"name\":\"closeTodayRatioByMoney\",\"type\":\"double\"},{\"name\":\"closeTodayRatioByVolume\",\"type\":\"double\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"AppMarginCommissionQueryStatus\",\"symbols\":[\"app_margin_commission_query_status_ok\",\"app_margin_commission_query_status_failure\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public String brokerId;
  @Deprecated public long accountID;
  @Deprecated public String accountAuthId;
  @Deprecated public String symbol;
  @Deprecated public double longMarginRatioByMoney;
  @Deprecated public double longMarginRatioByVolume;
  @Deprecated public double shortMarginRatioByMoney;
  @Deprecated public double shortMarginRatioByVolume;
  @Deprecated public double openRatioByMoney;
  @Deprecated public double openRatioByVolume;
  @Deprecated public double closeRatioByMoney;
  @Deprecated public double closeRatioByVolume;
  @Deprecated public double closeTodayRatioByMoney;
  @Deprecated public double closeTodayRatioByVolume;
  @Deprecated public AppMarginCommissionQueryStatus status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public QueryMarginCommissionStatusMessage() {}

  /**
   * All-args constructor.
   */
  public QueryMarginCommissionStatusMessage(String brokerId, Long accountID, String accountAuthId, String symbol, Double longMarginRatioByMoney, Double longMarginRatioByVolume, Double shortMarginRatioByMoney, Double shortMarginRatioByVolume, Double openRatioByMoney, Double openRatioByVolume, Double closeRatioByMoney, Double closeRatioByVolume, Double closeTodayRatioByMoney, Double closeTodayRatioByVolume, AppMarginCommissionQueryStatus status) {
    this.brokerId = brokerId;
    this.accountID = accountID;
    this.accountAuthId = accountAuthId;
    this.symbol = symbol;
    this.longMarginRatioByMoney = longMarginRatioByMoney;
    this.longMarginRatioByVolume = longMarginRatioByVolume;
    this.shortMarginRatioByMoney = shortMarginRatioByMoney;
    this.shortMarginRatioByVolume = shortMarginRatioByVolume;
    this.openRatioByMoney = openRatioByMoney;
    this.openRatioByVolume = openRatioByVolume;
    this.closeRatioByMoney = closeRatioByMoney;
    this.closeRatioByVolume = closeRatioByVolume;
    this.closeTodayRatioByMoney = closeTodayRatioByMoney;
    this.closeTodayRatioByVolume = closeTodayRatioByVolume;
    this.status = status;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return brokerId;
    case 1: return accountID;
    case 2: return accountAuthId;
    case 3: return symbol;
    case 4: return longMarginRatioByMoney;
    case 5: return longMarginRatioByVolume;
    case 6: return shortMarginRatioByMoney;
    case 7: return shortMarginRatioByVolume;
    case 8: return openRatioByMoney;
    case 9: return openRatioByVolume;
    case 10: return closeRatioByMoney;
    case 11: return closeRatioByVolume;
    case 12: return closeTodayRatioByMoney;
    case 13: return closeTodayRatioByVolume;
    case 14: return status;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: brokerId = (String)value$; break;
    case 1: accountID = (Long)value$; break;
    case 2: accountAuthId = (String)value$; break;
    case 3: symbol = (String)value$; break;
    case 4: longMarginRatioByMoney = (Double)value$; break;
    case 5: longMarginRatioByVolume = (Double)value$; break;
    case 6: shortMarginRatioByMoney = (Double)value$; break;
    case 7: shortMarginRatioByVolume = (Double)value$; break;
    case 8: openRatioByMoney = (Double)value$; break;
    case 9: openRatioByVolume = (Double)value$; break;
    case 10: closeRatioByMoney = (Double)value$; break;
    case 11: closeRatioByVolume = (Double)value$; break;
    case 12: closeTodayRatioByMoney = (Double)value$; break;
    case 13: closeTodayRatioByVolume = (Double)value$; break;
    case 14: status = (AppMarginCommissionQueryStatus)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'brokerId' field.
   */
  public String getBrokerId() {
    return brokerId;
  }

  /**
   * Sets the value of the 'brokerId' field.
   * @param value the value to set.
   */
  public void setBrokerId(String value) {
    this.brokerId = value;
  }

  /**
   * Gets the value of the 'accountID' field.
   */
  public Long getAccountID() {
    return accountID;
  }

  /**
   * Sets the value of the 'accountID' field.
   * @param value the value to set.
   */
  public void setAccountID(Long value) {
    this.accountID = value;
  }

  /**
   * Gets the value of the 'accountAuthId' field.
   */
  public String getAccountAuthId() {
    return accountAuthId;
  }

  /**
   * Sets the value of the 'accountAuthId' field.
   * @param value the value to set.
   */
  public void setAccountAuthId(String value) {
    this.accountAuthId = value;
  }

  /**
   * Gets the value of the 'symbol' field.
   */
  public String getSymbol() {
    return symbol;
  }

  /**
   * Sets the value of the 'symbol' field.
   * @param value the value to set.
   */
  public void setSymbol(String value) {
    this.symbol = value;
  }

  /**
   * Gets the value of the 'longMarginRatioByMoney' field.
   */
  public Double getLongMarginRatioByMoney() {
    return longMarginRatioByMoney;
  }

  /**
   * Sets the value of the 'longMarginRatioByMoney' field.
   * @param value the value to set.
   */
  public void setLongMarginRatioByMoney(Double value) {
    this.longMarginRatioByMoney = value;
  }

  /**
   * Gets the value of the 'longMarginRatioByVolume' field.
   */
  public Double getLongMarginRatioByVolume() {
    return longMarginRatioByVolume;
  }

  /**
   * Sets the value of the 'longMarginRatioByVolume' field.
   * @param value the value to set.
   */
  public void setLongMarginRatioByVolume(Double value) {
    this.longMarginRatioByVolume = value;
  }

  /**
   * Gets the value of the 'shortMarginRatioByMoney' field.
   */
  public Double getShortMarginRatioByMoney() {
    return shortMarginRatioByMoney;
  }

  /**
   * Sets the value of the 'shortMarginRatioByMoney' field.
   * @param value the value to set.
   */
  public void setShortMarginRatioByMoney(Double value) {
    this.shortMarginRatioByMoney = value;
  }

  /**
   * Gets the value of the 'shortMarginRatioByVolume' field.
   */
  public Double getShortMarginRatioByVolume() {
    return shortMarginRatioByVolume;
  }

  /**
   * Sets the value of the 'shortMarginRatioByVolume' field.
   * @param value the value to set.
   */
  public void setShortMarginRatioByVolume(Double value) {
    this.shortMarginRatioByVolume = value;
  }

  /**
   * Gets the value of the 'openRatioByMoney' field.
   */
  public Double getOpenRatioByMoney() {
    return openRatioByMoney;
  }

  /**
   * Sets the value of the 'openRatioByMoney' field.
   * @param value the value to set.
   */
  public void setOpenRatioByMoney(Double value) {
    this.openRatioByMoney = value;
  }

  /**
   * Gets the value of the 'openRatioByVolume' field.
   */
  public Double getOpenRatioByVolume() {
    return openRatioByVolume;
  }

  /**
   * Sets the value of the 'openRatioByVolume' field.
   * @param value the value to set.
   */
  public void setOpenRatioByVolume(Double value) {
    this.openRatioByVolume = value;
  }

  /**
   * Gets the value of the 'closeRatioByMoney' field.
   */
  public Double getCloseRatioByMoney() {
    return closeRatioByMoney;
  }

  /**
   * Sets the value of the 'closeRatioByMoney' field.
   * @param value the value to set.
   */
  public void setCloseRatioByMoney(Double value) {
    this.closeRatioByMoney = value;
  }

  /**
   * Gets the value of the 'closeRatioByVolume' field.
   */
  public Double getCloseRatioByVolume() {
    return closeRatioByVolume;
  }

  /**
   * Sets the value of the 'closeRatioByVolume' field.
   * @param value the value to set.
   */
  public void setCloseRatioByVolume(Double value) {
    this.closeRatioByVolume = value;
  }

  /**
   * Gets the value of the 'closeTodayRatioByMoney' field.
   */
  public Double getCloseTodayRatioByMoney() {
    return closeTodayRatioByMoney;
  }

  /**
   * Sets the value of the 'closeTodayRatioByMoney' field.
   * @param value the value to set.
   */
  public void setCloseTodayRatioByMoney(Double value) {
    this.closeTodayRatioByMoney = value;
  }

  /**
   * Gets the value of the 'closeTodayRatioByVolume' field.
   */
  public Double getCloseTodayRatioByVolume() {
    return closeTodayRatioByVolume;
  }

  /**
   * Sets the value of the 'closeTodayRatioByVolume' field.
   * @param value the value to set.
   */
  public void setCloseTodayRatioByVolume(Double value) {
    this.closeTodayRatioByVolume = value;
  }

  /**
   * Gets the value of the 'status' field.
   */
  public AppMarginCommissionQueryStatus getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(AppMarginCommissionQueryStatus value) {
    this.status = value;
  }

  /** Creates a new QueryMarginCommissionStatusMessage RecordBuilder */
  public static Builder newBuilder() {
    return new Builder();
  }
  
  /** Creates a new QueryMarginCommissionStatusMessage RecordBuilder by copying an existing Builder */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }
  
  /** Creates a new QueryMarginCommissionStatusMessage RecordBuilder by copying an existing QueryMarginCommissionStatusMessage instance */
  public static Builder newBuilder(QueryMarginCommissionStatusMessage other) {
    return new Builder(other);
  }
  
  /**
   * RecordBuilder for QueryMarginCommissionStatusMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<QueryMarginCommissionStatusMessage>
    implements org.apache.avro.data.RecordBuilder<QueryMarginCommissionStatusMessage> {

    private String brokerId;
    private long accountID;
    private String accountAuthId;
    private String symbol;
    private double longMarginRatioByMoney;
    private double longMarginRatioByVolume;
    private double shortMarginRatioByMoney;
    private double shortMarginRatioByVolume;
    private double openRatioByMoney;
    private double openRatioByVolume;
    private double closeRatioByMoney;
    private double closeRatioByVolume;
    private double closeTodayRatioByMoney;
    private double closeTodayRatioByVolume;
    private AppMarginCommissionQueryStatus status;

    /** Creates a new Builder */
    private Builder() {
      super(QueryMarginCommissionStatusMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.brokerId)) {
        this.brokerId = data().deepCopy(fields()[0].schema(), other.brokerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountID)) {
        this.accountID = data().deepCopy(fields()[1].schema(), other.accountID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.accountAuthId)) {
        this.accountAuthId = data().deepCopy(fields()[2].schema(), other.accountAuthId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.symbol)) {
        this.symbol = data().deepCopy(fields()[3].schema(), other.symbol);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.longMarginRatioByMoney)) {
        this.longMarginRatioByMoney = data().deepCopy(fields()[4].schema(), other.longMarginRatioByMoney);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.longMarginRatioByVolume)) {
        this.longMarginRatioByVolume = data().deepCopy(fields()[5].schema(), other.longMarginRatioByVolume);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.shortMarginRatioByMoney)) {
        this.shortMarginRatioByMoney = data().deepCopy(fields()[6].schema(), other.shortMarginRatioByMoney);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.shortMarginRatioByVolume)) {
        this.shortMarginRatioByVolume = data().deepCopy(fields()[7].schema(), other.shortMarginRatioByVolume);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.openRatioByMoney)) {
        this.openRatioByMoney = data().deepCopy(fields()[8].schema(), other.openRatioByMoney);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.openRatioByVolume)) {
        this.openRatioByVolume = data().deepCopy(fields()[9].schema(), other.openRatioByVolume);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.closeRatioByMoney)) {
        this.closeRatioByMoney = data().deepCopy(fields()[10].schema(), other.closeRatioByMoney);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.closeRatioByVolume)) {
        this.closeRatioByVolume = data().deepCopy(fields()[11].schema(), other.closeRatioByVolume);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.closeTodayRatioByMoney)) {
        this.closeTodayRatioByMoney = data().deepCopy(fields()[12].schema(), other.closeTodayRatioByMoney);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.closeTodayRatioByVolume)) {
        this.closeTodayRatioByVolume = data().deepCopy(fields()[13].schema(), other.closeTodayRatioByVolume);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.status)) {
        this.status = data().deepCopy(fields()[14].schema(), other.status);
        fieldSetFlags()[14] = true;
      }
    }
    
    /** Creates a Builder by copying an existing QueryMarginCommissionStatusMessage instance */
    private Builder(QueryMarginCommissionStatusMessage other) {
            super(QueryMarginCommissionStatusMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.brokerId)) {
        this.brokerId = data().deepCopy(fields()[0].schema(), other.brokerId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountID)) {
        this.accountID = data().deepCopy(fields()[1].schema(), other.accountID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.accountAuthId)) {
        this.accountAuthId = data().deepCopy(fields()[2].schema(), other.accountAuthId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.symbol)) {
        this.symbol = data().deepCopy(fields()[3].schema(), other.symbol);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.longMarginRatioByMoney)) {
        this.longMarginRatioByMoney = data().deepCopy(fields()[4].schema(), other.longMarginRatioByMoney);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.longMarginRatioByVolume)) {
        this.longMarginRatioByVolume = data().deepCopy(fields()[5].schema(), other.longMarginRatioByVolume);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.shortMarginRatioByMoney)) {
        this.shortMarginRatioByMoney = data().deepCopy(fields()[6].schema(), other.shortMarginRatioByMoney);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.shortMarginRatioByVolume)) {
        this.shortMarginRatioByVolume = data().deepCopy(fields()[7].schema(), other.shortMarginRatioByVolume);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.openRatioByMoney)) {
        this.openRatioByMoney = data().deepCopy(fields()[8].schema(), other.openRatioByMoney);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.openRatioByVolume)) {
        this.openRatioByVolume = data().deepCopy(fields()[9].schema(), other.openRatioByVolume);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.closeRatioByMoney)) {
        this.closeRatioByMoney = data().deepCopy(fields()[10].schema(), other.closeRatioByMoney);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.closeRatioByVolume)) {
        this.closeRatioByVolume = data().deepCopy(fields()[11].schema(), other.closeRatioByVolume);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.closeTodayRatioByMoney)) {
        this.closeTodayRatioByMoney = data().deepCopy(fields()[12].schema(), other.closeTodayRatioByMoney);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.closeTodayRatioByVolume)) {
        this.closeTodayRatioByVolume = data().deepCopy(fields()[13].schema(), other.closeTodayRatioByVolume);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.status)) {
        this.status = data().deepCopy(fields()[14].schema(), other.status);
        fieldSetFlags()[14] = true;
      }
    }

    /** Gets the value of the 'brokerId' field */
    public String getBrokerId() {
      return brokerId;
    }
    
    /** Sets the value of the 'brokerId' field */
    public Builder setBrokerId(String value) {
      validate(fields()[0], value);
      this.brokerId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'brokerId' field has been set */
    public boolean hasBrokerId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'brokerId' field */
    public Builder clearBrokerId() {
      brokerId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'accountID' field */
    public Long getAccountID() {
      return accountID;
    }
    
    /** Sets the value of the 'accountID' field */
    public Builder setAccountID(long value) {
      validate(fields()[1], value);
      this.accountID = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'accountID' field has been set */
    public boolean hasAccountID() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'accountID' field */
    public Builder clearAccountID() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'accountAuthId' field */
    public String getAccountAuthId() {
      return accountAuthId;
    }
    
    /** Sets the value of the 'accountAuthId' field */
    public Builder setAccountAuthId(String value) {
      validate(fields()[2], value);
      this.accountAuthId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'accountAuthId' field has been set */
    public boolean hasAccountAuthId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'accountAuthId' field */
    public Builder clearAccountAuthId() {
      accountAuthId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'symbol' field */
    public String getSymbol() {
      return symbol;
    }
    
    /** Sets the value of the 'symbol' field */
    public Builder setSymbol(String value) {
      validate(fields()[3], value);
      this.symbol = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'symbol' field has been set */
    public boolean hasSymbol() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'symbol' field */
    public Builder clearSymbol() {
      symbol = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'longMarginRatioByMoney' field */
    public Double getLongMarginRatioByMoney() {
      return longMarginRatioByMoney;
    }
    
    /** Sets the value of the 'longMarginRatioByMoney' field */
    public Builder setLongMarginRatioByMoney(double value) {
      validate(fields()[4], value);
      this.longMarginRatioByMoney = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'longMarginRatioByMoney' field has been set */
    public boolean hasLongMarginRatioByMoney() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'longMarginRatioByMoney' field */
    public Builder clearLongMarginRatioByMoney() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'longMarginRatioByVolume' field */
    public Double getLongMarginRatioByVolume() {
      return longMarginRatioByVolume;
    }
    
    /** Sets the value of the 'longMarginRatioByVolume' field */
    public Builder setLongMarginRatioByVolume(double value) {
      validate(fields()[5], value);
      this.longMarginRatioByVolume = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'longMarginRatioByVolume' field has been set */
    public boolean hasLongMarginRatioByVolume() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'longMarginRatioByVolume' field */
    public Builder clearLongMarginRatioByVolume() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'shortMarginRatioByMoney' field */
    public Double getShortMarginRatioByMoney() {
      return shortMarginRatioByMoney;
    }
    
    /** Sets the value of the 'shortMarginRatioByMoney' field */
    public Builder setShortMarginRatioByMoney(double value) {
      validate(fields()[6], value);
      this.shortMarginRatioByMoney = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'shortMarginRatioByMoney' field has been set */
    public boolean hasShortMarginRatioByMoney() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'shortMarginRatioByMoney' field */
    public Builder clearShortMarginRatioByMoney() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'shortMarginRatioByVolume' field */
    public Double getShortMarginRatioByVolume() {
      return shortMarginRatioByVolume;
    }
    
    /** Sets the value of the 'shortMarginRatioByVolume' field */
    public Builder setShortMarginRatioByVolume(double value) {
      validate(fields()[7], value);
      this.shortMarginRatioByVolume = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'shortMarginRatioByVolume' field has been set */
    public boolean hasShortMarginRatioByVolume() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'shortMarginRatioByVolume' field */
    public Builder clearShortMarginRatioByVolume() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'openRatioByMoney' field */
    public Double getOpenRatioByMoney() {
      return openRatioByMoney;
    }
    
    /** Sets the value of the 'openRatioByMoney' field */
    public Builder setOpenRatioByMoney(double value) {
      validate(fields()[8], value);
      this.openRatioByMoney = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'openRatioByMoney' field has been set */
    public boolean hasOpenRatioByMoney() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'openRatioByMoney' field */
    public Builder clearOpenRatioByMoney() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'openRatioByVolume' field */
    public Double getOpenRatioByVolume() {
      return openRatioByVolume;
    }
    
    /** Sets the value of the 'openRatioByVolume' field */
    public Builder setOpenRatioByVolume(double value) {
      validate(fields()[9], value);
      this.openRatioByVolume = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'openRatioByVolume' field has been set */
    public boolean hasOpenRatioByVolume() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'openRatioByVolume' field */
    public Builder clearOpenRatioByVolume() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'closeRatioByMoney' field */
    public Double getCloseRatioByMoney() {
      return closeRatioByMoney;
    }
    
    /** Sets the value of the 'closeRatioByMoney' field */
    public Builder setCloseRatioByMoney(double value) {
      validate(fields()[10], value);
      this.closeRatioByMoney = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'closeRatioByMoney' field has been set */
    public boolean hasCloseRatioByMoney() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'closeRatioByMoney' field */
    public Builder clearCloseRatioByMoney() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'closeRatioByVolume' field */
    public Double getCloseRatioByVolume() {
      return closeRatioByVolume;
    }
    
    /** Sets the value of the 'closeRatioByVolume' field */
    public Builder setCloseRatioByVolume(double value) {
      validate(fields()[11], value);
      this.closeRatioByVolume = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'closeRatioByVolume' field has been set */
    public boolean hasCloseRatioByVolume() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'closeRatioByVolume' field */
    public Builder clearCloseRatioByVolume() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'closeTodayRatioByMoney' field */
    public Double getCloseTodayRatioByMoney() {
      return closeTodayRatioByMoney;
    }
    
    /** Sets the value of the 'closeTodayRatioByMoney' field */
    public Builder setCloseTodayRatioByMoney(double value) {
      validate(fields()[12], value);
      this.closeTodayRatioByMoney = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'closeTodayRatioByMoney' field has been set */
    public boolean hasCloseTodayRatioByMoney() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'closeTodayRatioByMoney' field */
    public Builder clearCloseTodayRatioByMoney() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'closeTodayRatioByVolume' field */
    public Double getCloseTodayRatioByVolume() {
      return closeTodayRatioByVolume;
    }
    
    /** Sets the value of the 'closeTodayRatioByVolume' field */
    public Builder setCloseTodayRatioByVolume(double value) {
      validate(fields()[13], value);
      this.closeTodayRatioByVolume = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'closeTodayRatioByVolume' field has been set */
    public boolean hasCloseTodayRatioByVolume() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'closeTodayRatioByVolume' field */
    public Builder clearCloseTodayRatioByVolume() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'status' field */
    public AppMarginCommissionQueryStatus getStatus() {
      return status;
    }
    
    /** Sets the value of the 'status' field */
    public Builder setStatus(AppMarginCommissionQueryStatus value) {
      validate(fields()[14], value);
      this.status = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'status' field has been set */
    public boolean hasStatus() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'status' field */
    public Builder clearStatus() {
      status = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    public QueryMarginCommissionStatusMessage build() {
      try {
        QueryMarginCommissionStatusMessage record = new QueryMarginCommissionStatusMessage();
        record.brokerId = fieldSetFlags()[0] ? this.brokerId : (String) defaultValue(fields()[0]);
        record.accountID = fieldSetFlags()[1] ? this.accountID : (Long) defaultValue(fields()[1]);
        record.accountAuthId = fieldSetFlags()[2] ? this.accountAuthId : (String) defaultValue(fields()[2]);
        record.symbol = fieldSetFlags()[3] ? this.symbol : (String) defaultValue(fields()[3]);
        record.longMarginRatioByMoney = fieldSetFlags()[4] ? this.longMarginRatioByMoney : (Double) defaultValue(fields()[4]);
        record.longMarginRatioByVolume = fieldSetFlags()[5] ? this.longMarginRatioByVolume : (Double) defaultValue(fields()[5]);
        record.shortMarginRatioByMoney = fieldSetFlags()[6] ? this.shortMarginRatioByMoney : (Double) defaultValue(fields()[6]);
        record.shortMarginRatioByVolume = fieldSetFlags()[7] ? this.shortMarginRatioByVolume : (Double) defaultValue(fields()[7]);
        record.openRatioByMoney = fieldSetFlags()[8] ? this.openRatioByMoney : (Double) defaultValue(fields()[8]);
        record.openRatioByVolume = fieldSetFlags()[9] ? this.openRatioByVolume : (Double) defaultValue(fields()[9]);
        record.closeRatioByMoney = fieldSetFlags()[10] ? this.closeRatioByMoney : (Double) defaultValue(fields()[10]);
        record.closeRatioByVolume = fieldSetFlags()[11] ? this.closeRatioByVolume : (Double) defaultValue(fields()[11]);
        record.closeTodayRatioByMoney = fieldSetFlags()[12] ? this.closeTodayRatioByMoney : (Double) defaultValue(fields()[12]);
        record.closeTodayRatioByVolume = fieldSetFlags()[13] ? this.closeTodayRatioByVolume : (Double) defaultValue(fields()[13]);
        record.status = fieldSetFlags()[14] ? this.status : (AppMarginCommissionQueryStatus) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
