/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.aqitrade.raduga.messagebus.messages;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class QueryInstrumentsMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"QueryInstrumentsMessage\",\"namespace\":\"com.aqitrade.raduga.messagebus.messages\",\"fields\":[{\"name\":\"createDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public String createDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public QueryInstrumentsMessage() {}

  /**
   * All-args constructor.
   */
  public QueryInstrumentsMessage(String createDate) {
    this.createDate = createDate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return createDate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: createDate = (String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'createDate' field.
   */
  public String getCreateDate() {
    return createDate;
  }

  /**
   * Sets the value of the 'createDate' field.
   * @param value the value to set.
   */
  public void setCreateDate(String value) {
    this.createDate = value;
  }

  /** Creates a new QueryInstrumentsMessage RecordBuilder */
  public static Builder newBuilder() {
    return new Builder();
  }
  
  /** Creates a new QueryInstrumentsMessage RecordBuilder by copying an existing Builder */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }
  
  /** Creates a new QueryInstrumentsMessage RecordBuilder by copying an existing QueryInstrumentsMessage instance */
  public static Builder newBuilder(QueryInstrumentsMessage other) {
    return new Builder(other);
  }
  
  /**
   * RecordBuilder for QueryInstrumentsMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<QueryInstrumentsMessage>
    implements org.apache.avro.data.RecordBuilder<QueryInstrumentsMessage> {

    private String createDate;

    /** Creates a new Builder */
    private Builder() {
      super(QueryInstrumentsMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.createDate)) {
        this.createDate = data().deepCopy(fields()[0].schema(), other.createDate);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing QueryInstrumentsMessage instance */
    private Builder(QueryInstrumentsMessage other) {
            super(QueryInstrumentsMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.createDate)) {
        this.createDate = data().deepCopy(fields()[0].schema(), other.createDate);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'createDate' field */
    public String getCreateDate() {
      return createDate;
    }
    
    /** Sets the value of the 'createDate' field */
    public Builder setCreateDate(String value) {
      validate(fields()[0], value);
      this.createDate = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'createDate' field has been set */
    public boolean hasCreateDate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'createDate' field */
    public Builder clearCreateDate() {
      createDate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public QueryInstrumentsMessage build() {
      try {
        QueryInstrumentsMessage record = new QueryInstrumentsMessage();
        record.createDate = fieldSetFlags()[0] ? this.createDate : (String) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
